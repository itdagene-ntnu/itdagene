from django.db import models
from django.urls import reverse
from django.utils.text import slugify
from django.utils.timezone import now
from django.utils.translation import gettext_lazy as _

from itdagene.app.company.models import Company
from itdagene.core.models import BaseModel


class DigitalStand(BaseModel):
    slug = models.SlugField(
        blank=True,
        unique=True,
        max_length=150,
        null=False,
        help_text=_("Slug for stand. Will be autogenerated if left empty"),
    )
    livestream_url = models.URLField(blank=True, verbose_name=_("Livestream link"))
    qa_url = models.URLField(blank=True, verbose_name=_("Q&A link"))
    chat_url = models.CharField(max_length=100, blank=True, verbose_name=_("Chat link"))
    active = models.BooleanField(default=False, verbose_name=_("Active"))
    company = models.ForeignKey(
        Company,
        on_delete=models.CASCADE,
        related_name="digital_stand",
        verbose_name=_("Company"),
    )
    description = models.TextField(blank=True, verbose_name=_("description"))

    def get_absolute_url(self):
        return reverse("itdagene.stands.view", args=[self.pk])

    def __str__(self):
        return str(self.company.name + "-stand")

    def save(self, *args, **kwargs):
        if "form" in kwargs:
            form = kwargs["form"]
        else:
            form = None

        includes_slug = form is not None and "slug" not in form.changed_data

        if not self.pk and not includes_slug:
            slug_text = f"{self.company.name}"
            slug = slugify(slug_text)

            if DigitalStand.objects.filter(slug=slug).exists():
                slug = slugify(slug_text + f" {now().year}")

            self.slug = slug
        super(DigitalStand, self).save(*args, **kwargs)

        @classmethod
        def get_first_day(cls):
            return cls.objects.filter(company__in=Company.get_first_day())

        @classmethod
        def get_last_day(cls):
            return cls.objects.filter(company__in=Company.get_last_day())
